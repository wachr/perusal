(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{JHTV:function(e,r,t){"use strict";t.r(r);const n=async(e,r,t=e.name)=>{const a=[],i=[];var o,l=!1,c=!1;try{for(var s,u=function(e){var r;if("undefined"!=typeof Symbol&&(Symbol.asyncIterator&&(r=e[Symbol.asyncIterator]),null==r&&Symbol.iterator&&(r=e[Symbol.iterator])),null==r&&(r=e["@@asyncIterator"]),null==r&&(r=e["@@iterator"]),null==r)throw new TypeError("Object is not async iterable");return r.call(e)}(e.values());l=!(s=await u.next()).done;l=!1){const o=s.value,l=`${t}/${o.name}`;"file"===o.kind?i.push(o.getFile().then((r=>(r.directoryHandle=e,Object.defineProperty(r,"webkitRelativePath",{configurable:!0,enumerable:!0,get:()=>l}))))):"directory"===o.kind&&r&&a.push(n(o,r,l))}}catch(e){c=!0,o=e}finally{try{l&&null!=u.return&&await u.return()}finally{if(c)throw o}}return[...(await Promise.all(a)).flat(),...await Promise.all(i)]};r.default=async(e={})=>{e.recursive=e.recursive||!1;const r=await window.showDirectoryPicker({id:e.id,startIn:e.startIn});return n(r,e.recursive)}}}]);
//# sourceMappingURL=2.chunk.8b113.esm.js.map